name: DSmartTrader Production Release
on:
  push:
    tags:
    - production_*
jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install dependencies
      uses: "./.github/actions/npm_install"
    - name: Build
      uses: "./.github/actions/build"
      with:
        target: production
    - name: Versioning
      uses: "./.github/actions/versioning"
      with:
        target_branch: production
    - name: "Run Tests"
      run: npm run test
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
  publish_cloudflare_production:
    name: Publish to Cloudflare Production
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: Download Artifacts
      uses: actions/download-artifact@v3.0.2
      with:
        name: dist
    - name: Publish to Cloudflare
      uses: "./.github/actions/publish_to_pages_production"
      with: 
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  notify_on_slack:
    name: Notify on Slack
    if: always()
    runs-on: ubuntu-latest

    needs: [publish_cloudflare_production, build_and_test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Conclusion
        uses: technote-space/workflow-conclusion-action@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: dist
      - name: Grab Version Name
        id: extract_version
        run: echo "RELEASE_VERSION=${version}" >> $GITHUB_ENV
      - name: Send Slack Notification
        uses: "./.github/actions/notify_slack"
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          release_type: Production 
          version: ${{ steps.extract_version.outputs.RELEASE_VERSION}}
