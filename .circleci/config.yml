version: 2.1
orbs:
  slack: circleci/slack@3.4.2
commands:
  npm_install:
    description: "npm install and save cache"
    steps:
      - restore_cache:
          keys:
            - node-{{ checksum "package-lock.json" }}
            - node-
      - run:
          name: Install npm packages
          command: npm install
      - save_cache:
          key: node-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
  test:
    description: "Run npm test"
    steps:
      - run:
          name: "Run test"
          command: npm test
  build:
    description: "Build for release target"
    parameters:
      target:
        type: string
        default: "staging"
    steps:
      - run:
          name: Building dist for << parameters.target >>
          command: node_modules/grunt/bin/grunt releaseci --<< parameters.target >>
  versioning:
    description: "Add version to build"
    parameters:
      target_branch:
        type: string
    steps:
      - run:
          name: Tag build
          command: echo "<< parameters.target_branch >> $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > dist/version

  notify_slack:
    description: "Notify slack"
    steps:
      - slack/status:
          include_project_field: false
          failure_message: "Release failed for smarttrader.deriv.com with version *$(cat dist/version)*"
          success_message: "Release succeeded for smarttrader.deriv.com with version *$(cat dist/version)*"
          webhook: ${SLACK_WEBHOOK}
  publish_to_pages_staging:
    description: "Publish to cloudflare pages"
    steps:
      - run:
          name: "Publish to cloudflare pages (staging)"
          command: |
            cd dist
            npx wrangler pages publish . --project-name=deriv-binary-static-pages --branch=staging
            echo "New staging website - http://staging.cf-pages-deriv-binary-static.deriv.com"

  publish_to_pages_production:
    description: "Publish to cloudflare pages"
    steps:
      - run:
          name: "Publish to cloudflare pages (production)"
          command: |
            cd dist
            npx wrangler pages publish . --project-name=deriv-binary-static-pages --branch=main
            echo "New website - http://cf-pages-deriv-binary-static.deriv.com"

jobs:
  test:
    docker:
      - image: circleci/node:12.22.7
    steps:
      - checkout
      - npm_install
      - test
  release_staging:
    docker:
      - image: circleci/node:12.22.7
    steps:
      - checkout
      - npm_install
      - test
      - build:
          target: "staging"
      - build:
          target: "translations"
      - versioning:
          target_branch: "staging"
      - persist_to_workspace:
          root: dist
          paths:
            - .
      - notify_slack
  release_production:
    docker:
      - image: circleci/node:12.22.7
    steps:
      - checkout
      - npm_install
      - test
      - build:
          target: "production"
      - versioning:
          target_branch: "production"
      - persist_to_workspace:
          root: dist
          paths:
            - .
      - notify_slack

  publish_cloudflare_staging:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - attach_workspace:
          at: dist
      - publish_to_pages_staging

  publish_cloudflare_production:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - attach_workspace:
          at: dist
      - publish_to_pages_production

workflows:
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore: /^master$/
  release_staging:
    jobs:
      - release_staging:
          filters:
            branches:
              only: /^master$/
          context: binary-frontend-artifact-upload
      - publish_cloudflare_staging:
          requires:
            - release_staging
          filters:
            branches:
              only: /^master$/
          context: binary-frontend-artifact-upload
  release_production:
    jobs:
      - release_production:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^production.*/
          context: binary-frontend-artifact-upload
      - publish_cloudflare_production:
          requires:
            - release_production
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^production.*/
          context: binary-frontend-artifact-upload
